package view.settings;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;
import java.awt.*;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

public class SettingsPage extends JFrame {

    private JPanel settingsMainPanel;
    private JTree tree;

    // ride side: card layout
    private JPanel cardPanel;

    // panels
    SettingsProxyPanel proxyPanel = new SettingsProxyPanel();
    SettingIntruderPanel intruderPanel = new SettingIntruderPanel();


    public SettingsPage() {


        setSize(new Dimension(1024, 800));


        DefaultMutableTreeNode root = new DefaultMutableTreeNode("Tools");
        root.add(new DefaultMutableTreeNode("Proxy"));
        root.add(new DefaultMutableTreeNode("Intruder"));


        // Apply custom styling to the JTree
        DefaultTreeCellRenderer renderer = new DefaultTreeCellRenderer();
        renderer.setBackgroundSelectionColor(new Color(173, 216, 230));
        renderer.setTextSelectionColor(Color.BLACK);
        renderer.setLeafIcon(null);
        renderer.setClosedIcon(null);
        renderer.setOpenIcon(null);


        DefaultTreeModel model = new DefaultTreeModel(root);
        tree.setPreferredSize(new Dimension(200, 200));
        tree.setModel(model);

        cardPanel.add(proxyPanel.getProxyPanel(), "Proxy");
        cardPanel.add(intruderPanel.getIntruderPanel(), "Intruder");

        // display proxy panel selected by default
        CardLayout cardLayout = (CardLayout) cardPanel.getLayout();
        cardLayout.show(cardPanel, "Proxy");

        // Select the Proxy node by default in the tree
        System.out.println(root.getFirstChild());
        TreePath proxyPath = new TreePath(root.getNextNode().getPath());
        tree.setSelectionPath(proxyPath); // This ensures the blue highlight
        tree.scrollPathToVisible(proxyPath); // Ensures it's visible if nested
        tree.repaint(); // Force the tree to repaint to update selection

        add(settingsMainPanel);
    }

    public JPanel getCardPanel() {
        return cardPanel;
    }

    public JTree getTree() {
        return tree;
    }

    public JButton getExportButton() {
        return proxyPanel.getExportCACertificateButton();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        settingsMainPanel = new JPanel();
        settingsMainPanel.setLayout(new GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        settingsMainPanel.setMinimumSize(new Dimension(400, 500));
        settingsMainPanel.setOpaque(true);
        settingsMainPanel.setPreferredSize(new Dimension(400, 500));
        settingsMainPanel.setRequestFocusEnabled(false);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        settingsMainPanel.add(panel1, new GridConstraints(0, 0, 2, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        panel1.add(scrollPane1, BorderLayout.WEST);
        tree = new JTree();
        panel1.add(tree, BorderLayout.EAST);
        final Spacer spacer1 = new Spacer();
        settingsMainPanel.add(spacer1, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final JScrollPane scrollPane2 = new JScrollPane();
        settingsMainPanel.add(scrollPane2, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        cardPanel = new JPanel();
        cardPanel.setLayout(new CardLayout(0, 0));
        scrollPane2.setViewportView(cardPanel);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return settingsMainPanel;
    }

}
